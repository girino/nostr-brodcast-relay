# Nginx Site Configuration for Broadcast Relay
# This configuration is for nginx running on the HOST machine (not in Docker)
# The relay runs in Docker and is exposed on localhost:3334
# 
# Installation:
# 1. Copy this file: sudo cp nginx.conf.example /etc/nginx/sites-available/broadcast-relay
# 2. Edit server_name: sudo nano /etc/nginx/sites-available/broadcast-relay
# 3. Create symlink: sudo ln -s /etc/nginx/sites-available/broadcast-relay /etc/nginx/sites-enabled/
# 4. Test config: sudo nginx -t
# 5. Reload nginx: sudo systemctl reload nginx
# 6. (Optional) Get SSL with certbot: sudo certbot --nginx -d relay.example.com
#
# Certbot will automatically add SSL configuration to this file

# Upstream backend - the broadcast relay Docker container
# Exposed on localhost:3334 from docker-compose
upstream broadcast_relay {
    server 127.0.0.1:3334;
    keepalive 32;
}

# Map to determine WebSocket upgrade
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# HTTP server block
server {
    listen 80;
    listen [::]:80;
    
    # Change to your domain name
    server_name relay.example.com;
    
    # Logging
    access_log /var/log/nginx/broadcast-relay-access.log;
    error_log /var/log/nginx/broadcast-relay-error.log warn;

    # Client body size (for large events)
    client_max_body_size 1M;

    # WebSocket and HTTP requests to relay
    location / {
        # Proxy to upstream
        proxy_pass http://broadcast_relay;
        proxy_http_version 1.1;
        
        # WebSocket upgrade headers - CRITICAL for Nostr relay
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts for long-lived WebSocket connections
        # Nostr relays keep connections open for subscriptions
        proxy_connect_timeout 1h;
        proxy_send_timeout 1h;
        proxy_read_timeout 1h;
        
        # Disable buffering for WebSocket real-time data
        proxy_buffering off;
        
        # Increase buffer sizes for WebSocket frames
        proxy_buffer_size 16k;
        proxy_buffers 8 16k;
        proxy_busy_buffers_size 32k;
    }

    # Health check endpoint (for monitoring)
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}

# Note: HTTPS/SSL configuration will be automatically added by certbot
# Run: sudo certbot --nginx -d relay.example.com
# Certbot will:
#   - Obtain Let's Encrypt certificate
#   - Add HTTPS server block
#   - Configure automatic renewal
#   - Set up HTTP to HTTPS redirect
